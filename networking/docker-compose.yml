name: networking

services:
  omada-controller:
    container_name: omada-controller
    image: mbentley/omada-controller:latest
    restart: unless-stopped
    stop_grace_period: 60s
    network_mode: host
    environment:
      - PUID=508
      - PGID=508
      - MANAGE_HTTP_PORT=8088
      - MANAGE_HTTPS_PORT=8043
      - PORTAL_HTTP_PORT=8088
      - PORTAL_HTTPS_PORT=8843
      - PORT_APP_DISCOVERY=27001
      - PORT_ADOPT_V1=29812
      - PORT_UPGRADE_V1=29813
      - PORT_MANAGER_V1=29811
      - PORT_MANAGER_V2=29814
      - PORT_DISCOVERY=29810
      - SHOW_SERVER_LOGS=true
      - SHOW_MONGODB_LOGS=false
      - SSL_CERT_NAME=tls.crt
      - SSL_KEY_NAME=tls.key
      - TZ=Europe/Madrid
    volumes:
      - /opt/omada-data:/opt/tplink/EAPController/data
      - /opt/omada-logs:/opt/tplink/EAPController/logs

  pihole:
    profiles:
      - donotstart
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    # - "67:67/udp"
      - "1080:80/tcp"
    environment:
      TZ: 'Europe/Madrid'
      WEBPASSWORD: ${PIHOLE_WEBPASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - '/opt/pihole/etc-pihole:/etc/pihole'
      - '/opt/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped # Recommended but not required (DHCP needs NET_ADMIN)

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    ports:
      - 53:53/udp
      # - 67:67/udp 
      # - 68:68/tcp 
      # - 68:68/udp 
      - 2080:80/tcp 
      - 20443:443/tcp 
      - 853:853/tcp 
      - 3010:3000/tcp 
    environment:
      TZ: 'Europe/Madrid'
    volumes:
      - '/opt/adguard/workdir:/opt/adguardhome/work'
      - '/opt/adguard/confdir:/opt/adguardhome/conf'
    restart: unless-stopped
    networks:
      vpn:
        ipv4_address: 10.8.1.2

  nginxpm:
    container_name: nginxpm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP

    # Uncomment the next line if you uncomment anything in the section
    # environment:
      # Uncomment this if you want to change the location of
      # the SQLite DB file within the container
      # DB_SQLITE_FILE: "/data/database.sqlite"

      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'

    volumes:
      - /opt/nginxpm/data:/data
      - /opt/nginxpm/letsencrypt:/etc/letsencrypt

  wireguard:
    profiles:
      - donotstart
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
     #- SERVERURL=ventaiol.ddns.net #optional
      - SERVERURL=${WIREGUARD_SERVERURL}
      - SERVERPORT=51820 #optional
      - PEERS=${WIREGUARD_PEERS}josep,generic,jaume
      - PEERDNS=10.8.1.2,9.9.9.9 #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - PERSISTENTKEEPALIVE_PEERS= #optional
      - LOG_CONFS=true #optional
    volumes:
      - /opt/wireguard/config:/config
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      vpn:
        ipv4_address: 10.8.1.3

  wg-easy:
    environment:
      - LANG=ca
      - WG_HOST=${WG_HOST}
      # Optional:
      - PASSWORD_HASH=${WG_PASSWORD_HASH}
      # - PORT=51821
      - WG_PORT=51820
      # - WG_CONFIG_PORT=92820
      # - WG_DEFAULT_ADDRESS=10.8.0.x
      - WG_DEFAULT_DNS=10.8.1.2,9.9.9.9
      # - WG_MTU=1420
      - WG_ALLOWED_IPS=0.0.0.0/0
      # - WG_PERSISTENT_KEEPALIVE=25
      # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
      # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
      # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
      # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
      # - UI_TRAFFIC_STATS=true
      # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)
      # - WG_ENABLE_ONE_TIME_LINKS=true
      # - UI_ENABLE_SORT_CLIENTS=true
      # - WG_ENABLE_EXPIRES_TIME=true
      # - ENABLE_PROMETHEUS_METRICS=false
      # - PROMETHEUS_METRICS_PASSWORD=
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    volumes:
      - /opt/wireguard-ez:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    # - NET_RAW # ⚠️ Uncomment if using Podman
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      vpn:
        ipv4_address: 10.8.1.4

  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
     #- TZ=Europe/Madrid
    volumes:
      - /opt/ddclient/config:/config
    restart: unless-stopped

  cloudflared: 
    image: cloudflare/cloudflared 
    container_name: cloudflare-tunnel 
    restart: unless-stopped 
    command: tunnel run 
    environment: 
      - TUNNEL_TOKEN=${CLOUDFARE_TUNNEL_TOKEN}

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - 8081:8081 #qbittorrent web interface
      - 6881:6881
      - 6881:6881/udp
    devices:
      - "/dev/net/tun"
    volumes:
      - /opt/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${GLUETUN_WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=10.2.0.2/32
      #- PORT_FORWARD_ONLY=on
      #- VPN_PORT_FORWARDING=on
      - VPN_DNS_ADDRESS=10.2.0.1
      - SERVER_COUNTRIES=Spain
      - TZ=Europe/Madrid
      - UPDATER_PERIOD=24h
    restart: unless-stopped

networks:
  vpn:
    ipam:
      config:
        - subnet: 10.8.1.0/24

#volumes: 
#  omada-data: 
#  omada-logs:
